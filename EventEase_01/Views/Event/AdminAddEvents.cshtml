@using Microsoft.EntityFrameworkCore
 @model EventEase_01.Models.EventModel 
@{
    ViewData["Title"] = "Adding A New Event ";
}
<head>
    <style>
        body {
            background-color: black; 
            color: #fff;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            font-weight: bold;
            color: #fff; 
        }

        .btn-primary {
            background-color: #dc3545; 
            border-color: #dc3545;
            color: #fff; 
        }

            .btn-primary:hover {
                background-color: #c82333; 
                border-color: #bd2130;
            }

            .btn-primary:focus,
            .btn-primary.focus {
                box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); 
            }

        .row {
            margin-right: -5px;
            margin-left: -5px;
        }

        .col-md-4 {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
            margin-top:5px;
        }

        .button-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

            .button-container .btn {
                flex: 0 0 48%;
            }
    </style>
</head>
<div class="row">
    <form class="col-md-4" asp-controller="Venues" asp-action="Create" method="post">
        <div class="form-group">
            <input type="submit" formmethod="post" value="Manage Venues " class="btn btn-primary" />
        </div>
    </form>
    <form class="col-md-4" asp-controller="Categories" asp-action="Create" method="post">
        <div class="form-group">
            <input type="submit" formmethod="post" value="Manage Categories" class="btn btn-primary" />
        </div>
    </form>
</div>
@* <input asp-controller="Venues" asp-action="Create" method="post" type="submit" value="Add A New Venue" class="btn btn-primary" /> *@
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Event" asp-action="AdminAddEvents" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="EventName" class="control-label"></label>
                <input asp-for="EventName" class="form-control" required/>
                <span asp-validation-for="EventName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventDescription" class="control-label"></label>
                <input asp-for="EventDescription" class="form-control" required />
                <span asp-validation-for="EventDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventCity" class="control-label"></label>
                <input asp-for="EventCity" class="form-control" required />
                <span asp-validation-for="EventCity" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EventImage, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.EventImage, new { type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventImage, "")
            </div>


            <div class="form-group">
                <label asp-for="EventDate" class="control-label"></label>
                <input asp-for="EventDate" class="form-control" type="datetime-local" min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required />
                <span asp-validation-for="EventDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="VenueId" class="control-label">Select Venue:</label>
                <select asp-for="VenueId" class="form-control">
                    <option value="">-- Select Venue --</option>
                    @{
                        var venues = ViewData["Venues"] as List<Venue>;

                    }
                    @if (venues != null)
                    {
                        Console.WriteLine("Inside if ");
                        foreach (var venue in venues)
                        {
                            <option value="@venue.VenueId">@venue.VenueName</option>

                        }
                    }
                    else
                   
                    {
                        Console.WriteLine("Inside else ");
                        <p>No venues available</p>
                    }

               
                </select>
                <span asp-validation-for="VenueId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Select Category of Event :</label>
                <select asp-for="CategoryId" class="form-control">
                    <option value="">-- Select Category --</option>
                    @{
                        var categories = ViewData["Categories"] as List<Category>;
                    }
                    @if (categories != null)
                    {
                        Console.WriteLine("Inside if ");
                        foreach (var category in categories)
                        {
                            <option value="@category.CategoryId">@category.CategoryName</option>

                        }
                    }
                    else
                    {
                        Console.WriteLine("Inside else ");
                        <p>No Category available</p>
                    }
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfTickets" class="control-label"></label>
                <input asp-for="NumberOfTickets" class="form-control" required />
                <span asp-validation-for="NumberOfTickets" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TicketPrice" class="control-label"></label>
                <input asp-for="TicketPrice" class="form-control" required />
                <span asp-validation-for="TicketPrice" class="text-danger"></span>
            </div>

            <br />
              
            <div class="form-group">
                <input type="submit" formmethod="post" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script>
        var dateInput = document.querySelector('input[type="datetime-local"]');
        dateInput.addEventListener('change', function() {
            var selectedDate = new Date(this.value);
            var currentDate = new Date();
            if (selectedDate < currentDate) {
                this.setCustomValidity("Date must be equal to or after the current date and time");
            } else {
                this.setCustomValidity("");
            }
        });
    </script>
}
